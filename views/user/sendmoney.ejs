<%- include('header'); -%>
<main>
   <div class="top-nav">
    <div class="user-name-and-search">
        <div class="logo">
          <div class="action-header-logo">
              <img src="./K-for-kepas-2.jpg" alt="logo">
              
          </div>
      </div>
      <ul class="tiop-nav-actions">
          <li><a href="/"> dashboard</a></li>
          <li><a href="./sendmoney" class="active-link"> send or withdraw</a></li>
          <li><a href="./wallet"> wallet</a></li>
          <li><a href="./activity"> activity</a></li>
          <li><a href="./help"> help</a></li>
      </ul>
        <div class="search">
          <a href="./notifications" class="link-1" id="notifications-closed">
              <div class="notifications">
                  <span class="notification-count">2</span>
                  <span class="bell-icon"><i class="fas fa-bell"></i></span>
              </div>
          </a>
  
          <a href="./account" class="link-1" id="my-account-closed">
              <div class="user-account-details dropbtn" onclick="showUserProfileMenu()">
                  <span class="user-icon"><i class="fas fa-user"></i></span>
                  
              </div>
          </a>
        </div>
    </div>
  </div>
  <div class="payment-navigation">
    <div class="payment-navigation-links">
      <ul>
        <li><a href="./sendmoney" class="send-money-active-link">Send</a></li>
        <li><a href="./withdrawmoney">Withdraw</a></li>
      </ul>
    </div>
  </div>
  <br>


  <!-- WITHDRAW MODAL -->
  <div class="wallet__modal send-money">
    <h1 class="text-center">Send Money</h1>
    
    <div class="modal__details">
      <div class="withdraw">
        <div class="user-user-field">
          <form id="regForm" method="POST">
              <% if(typeof msg != 'undefined'){ %>
              <div class="success-msg"><%= msg %></div><% }
              if(typeof error !== 'undefined'){ %>
              <div class="err-msg"><%= error %></div><% } %>
          
              
              <!-- Success indicators -->
              
        
              <fieldset>
                <span>SEND MONEY</span>
                  <div class="tab">
                      <p class="send-money-input"><input type="number" id="recipient-number" placeholder="Enter phone number" oninput="this.className = ''" name="recipientNumber" list="recipient" autofocus required>
                          <datalist id="recipient">
                              <option value="0741642093">
                              <option value="1234567890">
                              <option value="0112345678">
                              <option value="0711223344">
                          </datalist>
                      </p>
                  </div>
        
                  <div class="tab">
                      <p class="send-money-input">
                      <input type="number" min="0" placeholder="Enter amount" step="0.01" oninput="this.className = ''" name="recipientQuantity" required >
                      </p>
                  </div>
                  <div class="tab">
                      <p class="send-money-input"><input placeholder="Enter Password..." oninput="this.className = ''" name="pword" type="password" autocomplete="on"></p>
                  </div>
        
                  <div class="next-prev-btns">
                        <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                        <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button> 
                  </div>
              </fieldset>
          </form>
          </div>
    </div>
  </div>
  <div style="text-align:center;margin-top:40px;">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
  </div>






<script>
  // ===================================================== //
        // Next / Previous steps in send money page
// ===================================================== //

let currentTab = 0; // Current tab is set to be the first tab (0)
showTab(currentTab); // Display the current tab

function showTab(n) {
  // This function will display the specified tab of the form...
  let x = document.getElementsByClassName("tab");
  x[n].style.display = "block";
  //... and fix the Previous/Next buttons:
  if (n == 0) {
    document.getElementById("prevBtn").style.visibility = "hidden";
  } else {
    document.getElementById("prevBtn").style.visibility = "visible";
  }
  if (n == (x.length - 1)) {
    document.getElementById("nextBtn").innerHTML = "Submit";
  } else {
    document.getElementById("nextBtn").innerHTML = "Next";
  }
  //... and run a function that will display the correct step indicator:
  fixStepIndicator(n)
}

function nextPrev(n) {
  // This function will figure out which tab to display
  var x = document.getElementsByClassName("tab");
  // Exit the function if any field in the current tab is invalid:
  if (n == 1 && !validateForm()) return false;
  // Hide the current tab:
  x[currentTab].style.display = "none";
  // Increase or decrease the current tab by 1:
  currentTab = currentTab + n;
  // if you have reached the end of the form...
  if (currentTab >= x.length) {
    // ... the form gets submitted:
    document.getElementById("regForm").submit();
    return false;
  }
  // Otherwise, display the correct tab:
  showTab(currentTab);
}

function validateForm() {
  // This function deals with validation of the form fields
  var x, y, i, valid = true;
  x = document.getElementsByClassName("tab");
  y = x[currentTab].getElementsByTagName("input");
  // A loop that checks every input field in the current tab:
  for (i = 0; i < y.length; i++) {
    // If a field is empty...
    if (y[i].value == "") {
      // add an "invalid" class to the field:
      y[i].className += " invalid";
      // and set the current valid status to false
      valid = false;
    }
  }
  // If the valid status is true, mark the step as finished and valid:
  if (valid) {
    document.getElementsByClassName("step")[currentTab].className += " finish";
  }
  return valid; // return the valid status
}

function fixStepIndicator(n) {
  // This function removes the "active" class of all steps...
  var i, x = document.getElementsByClassName("step");
  for (i = 0; i < x.length; i++) {
    x[i].className = x[i].className.replace(" active", "");
  }
  //... and adds the "active" class on the current step:
  x[n].className += " active";
}
</script>

</main>
<%- include('footerContent'); -%>
